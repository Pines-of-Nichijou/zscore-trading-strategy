// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © nichu211

//@version=6
strategy("ZSCore Trading Strategy", overlay=false, initial_capital=1000, default_qty_value = 10, default_qty_type = strategy.cash, fill_orders_on_standard_ohlc = true)

import nichu211/ZScore/1 as ZScore
import nichu211/OKXSignalLogic/1 as okx

// Signal Settings Group
var signalGroup = "Signal Settings"
signalToken = input.string("YOUR_DEFAULT_TOKEN", title="Signal Token", group=signalGroup)

// Capital & Risk Management Group
var capitalGroup = "Capital & Risk Management"
initialCapital = input.float(1000, title="Initial Capital", group=capitalGroup)
positionSize = input.float(100.0, title="Position Size (%)", minval=0.1, maxval=100, group=capitalGroup)
stopLossPercent = input.float(2, title="Stop Loss (%)", group=capitalGroup)
takeProfitPercent = input.float(5, title="Take Profit (%)", group=capitalGroup)

// Indicator Selection Group
var indicatorGroup = "Indicator Selection"
useMA = input.bool(true, title="Use Moving Average", group=indicatorGroup)
useEMA = input.bool(true, title="Use Exponential Moving Average", group=indicatorGroup)
useRSI = input.bool(false, title="Use RSI", group=indicatorGroup)
useMACD = input.bool(true, title="Use MACD", group=indicatorGroup)

// Strategy Parameters Group
var strategyGroup = "Strategy Parameters"
lookbackPeriod = input.int(20, title="Lookback Period", minval=1, tooltip="Number of bars used for calculations", group=strategyGroup)
indicatorLength = input.int(14, title="Indicator Length", minval=1, tooltip="Length for MA, EMA, and RSI calculations", group=strategyGroup)
zScoreThreshold = input.float(1.5, title="Z-Score Threshold", group=strategyGroup)

// RSI Settings Group
var rsiGroup = "RSI Settings"
rsiOverbought = input.int(70, title="RSI Overbought Level", minval=0, maxval=100, group=rsiGroup)
rsiOversold = input.int(30, title="RSI Oversold Level", minval=0, maxval=100, group=rsiGroup)

// MACD Settings Group
var macdGroup = "MACD Settings"
macdFastLength = input.int(12, title="MACD Fast Length", minval=1, group=macdGroup)
macdSlowLength = input.int(26, title="MACD Slow Length", minval=1, group=macdGroup)
macdSignalLength = input.int(9, title="MACD Signal Length", minval=1, group=macdGroup)

// Calculate Z-Score
zScore = ZScore.getZScore(close, lookbackPeriod)

// Calculate Indicators
ma = ta.sma(close, indicatorLength)
ema = ta.ema(close, indicatorLength)
rsi = ta.rsi(close, indicatorLength)
[macdLine, signalLine, _] = ta.macd(close, macdFastLength, macdSlowLength, macdSignalLength)

// Trading Logic
buySignal = zScore > zScoreThreshold
sellSignal = zScore < -zScoreThreshold

if useMA
    buySignal := buySignal and close > ma
    sellSignal := sellSignal and close < ma

if useEMA
    buySignal := buySignal and close > ema
    sellSignal := sellSignal and close < ema

if useRSI
    buySignal := buySignal and rsi < rsiOversold
    sellSignal := sellSignal and rsi > rsiOverbought

if useMACD
    buySignal := buySignal and macdLine > signalLine
    sellSignal := sellSignal and macdLine < signalLine

// Execute Trades
if buySignal
    orderId = "Buy " + syminfo.ticker
    entryMsg = okx.generateManualMessage(action="ENTER_LONG", signalToken=signalToken, amount=positionSize, orderType="market")
    exitMsg = okx.generateManualMessage(action="EXIT_LONG", signalToken=signalToken, amount=positionSize, orderType="limit", priceOffset=takeProfitPercent)
    strategy.entry(orderId, strategy.long, alert_message=entryMsg)
    strategy.exit("Take Profit/Stop Loss", orderId, limit=close * (1 + takeProfitPercent / 100), stop=close * (1 - stopLossPercent / 100), alert_message=exitMsg)

if sellSignal
    orderId = "Sell " + syminfo.ticker
    entryMsg = okx.generateManualMessage(action="ENTER_SHORT", signalToken=signalToken, amount=positionSize)
    exitMsg = okx.generateManualMessage(action="EXIT_SHORT", signalToken=signalToken, amount=positionSize, orderType="limit", priceOffset=-takeProfitPercent)
    strategy.entry(orderId, strategy.short, alert_message=entryMsg)
    strategy.exit("Take Profit/Stop Loss", orderId, limit=close * (1 - takeProfitPercent / 100), stop=close * (1 + stopLossPercent / 100), alert_message=exitMsg)

// Plotting
plot(zScore, title="Z-Score", color=color.blue)
hline(zScoreThreshold, "Z-Score Threshold", color=color.red)
hline(-zScoreThreshold, "Negative Z-Score Threshold", color=color.green)
plot(ma, title="Moving Average", color=color.orange)
plot(ema, title="Exponential Moving Average", color=color.purple)
